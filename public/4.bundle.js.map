{"version":3,"file":"4.bundle.js","sources":["webpack:///./src/components/exportMetaData.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/actions/selectedReleasesActions.js","webpack:///./src/components/MetaDataExportFunctions/ExportTools.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport Select from 'react-select';\nimport Loader from './SubComponents/Loader';\nimport { initializeSelectedLibrary } from '../actions/selectedLibraryActions';\nimport { initializeSelectedComposer } from '../actions/selectedComposerActions';\nimport { initializeSelectedReleases } from '../actions/selectedReleasesActions';\n\n// this import contains all the export/download functions:\nconst exportTools = require('./MetaDataExportFunctions/ExportTools.js');\n\nclass ExportDashboard extends React.Component {\n   constructor(props) {\n     super(props)\n   }\n\n   state = {\n     batchesDropDown: [],\n     batchOrRelease: 'Background Instrumental Batch',\n     inclusive: false,\n     releaseFilter: 147,\n     releasesDropDown: [],\n     selectedLibrary: 'background-instrumentals'\n   }\n\n   handleChange = (releaseFilter) => {\n     this.setState({releaseFilter})\n   }\n\n   handleCheck = () => {\n     this.setState({inclusive: !this.state.inclusive})\n   }\n\n  handleRadio = (event) => {\n    switch(event.target.value){\n      case 'background-instrumentals':\n        this.setState(\n          {\n          batchesDropDown: this.props.batchesBI.map(rel => {\n            return {value: rel.rel_id, label: rel.rel_num}}),\n          batchOrRelease: 'Background Instrumental Batch',\n          releaseFilter: null,\n          selectedLibrary: event.target.value\n       })\n        this.props.initializeSelectedLibrary(this.props.cues, event.target.value);\n        this.props.initializeSelectedComposer(this.props.composersBI)\n        this.props.initializeSelectedReleases(this.props.batchesBI)\n        break;\n      case 'independent-artists':\n        this.setState({\n            batchesDropDown: this.props.releasesIA.map(rel => {\n          return {value: rel.rel_id, label: rel.rel_num}}),\n            batchOrRelease: 'Indie Artist Release',\n            releaseFilter: null,\n            selectedLibrary: event.target.value\n          })\n        this.props.initializeSelectedLibrary(this.props.tracks, event.target.value);\n        this.props.initializeSelectedComposer(this.props.artists)\n        this.props.initializeSelectedReleases(this.props.releasesIA)\n        break;\n      case 'Background Instrumental Release':\n        this.setState({\n          batchOrRelease: event.target.value,\n          batchesDropDown: this.state.releasesDropDown,\n          releaseFilter: null,\n          })\n        break;\n      case 'Background Instrumental Batch':\n        this.setState(\n          {batchOrRelease: event.target.value,\n            batchesDropDown: this.props.batchesBI.map(rel => {\n            return {value: rel.rel_id, label: rel.rel_num}\n          }),\n          releaseFilter: null})\n        break;\n      default:\n        null\n    }\n  }\n\n  async componentDidMount (){\n    // initialize the library in case this is the landing page\n    if(this.props.selectedLibrary.library.length === 0){\n      this.props.initializeSelectedLibrary(this.props.cues, 'background-instrumentals')\n    }\n\n    await this.setState({batchesDropDown: this.props.batchesBI.map(rel => {\n      return {value: rel.rel_id, label: rel.rel_num}\n    })})\n    if(this.props.composersBI.length === 0){\n      await this.props.initializeSelectedComposer(this.props.composersBI)\n    }\n    if(this.props.batchesBI.length === 0){\n      await this.props.initializeSelectedReleases(this.props.batchesBI)\n    }\n    // this handles creating the releasesDropDown array\n    if(this.state.releasesDropDown.length === 0){\n      var releases = {};\n      for (var i = 0; i < this.props.batchesBI.length; i++) {\n        var releaseLabel = `${isNaN(parseInt(this.props.batchesBI[i].rel_num_only)) ? '': 'R' }${this.props.batchesBI[i].rel_num_only}`;\n        if (!releases[releaseLabel]) {\n          releases[releaseLabel] = [];\n        }\n        releases[releaseLabel].push(this.props.batchesBI[i].rel_id);\n      }\n      let releasesDropDown = [];\n      for (var releaseLabel in releases) {\n        releasesDropDown.push({releaseLabel: releaseLabel, releaseIDs: releases[releaseLabel].join('-')});\n      }\n      this.setState({releasesDropDown: releasesDropDown.map(rel => {\n        return {value: rel.releaseIDs, label: rel.releaseLabel}\n      })})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // this is initializing our selected composers by default once the API request is returned\n    // I added this condition so that the user could start on any /url_path\n    if(this.props.selectedComposers.length === 0){\n      this.props.initializeSelectedComposer(this.props.composersBI)\n    }\n  }\n\n  render(){\n    console.log(123, this.props)\n    console.log(124, this.state)\n\n    const releaseFilter  = this.state.releaseFilter;\n    const selectedLibrary = this.props.selectedLibrary.library;\n    const ExportsOptions = () => {\n     return(\n     <div className='column-wrapper'>\n       <div className='dashboard-left-column'>\n         <h2>Meta Data Dashboard</h2>\n         <h3>Filter Options: </h3>\n         <Select\n           value={releaseFilter}\n           onChange={this.handleChange}\n           options={this.state.batchesDropDown}\n           className='exports-dropdown'\n           placeholder={ this.state.batchOrRelease === 'Indie Artist Release' ? `Select an ${this.state.batchOrRelease}` : `Select a ${this.state.batchOrRelease}`}\n         />\n         <br/>\n         <label>\n           <input\n             type='radio'\n             name='react-tips'\n             value='background-instrumentals'\n             checked={this.state.selectedLibrary === 'background-instrumentals'}\n             className='form-check-input'\n             onChange={this.handleRadio}\n           /> Background Instrumentals\n         </label>\n         <label>\n           <input\n             type='radio'\n             name='react-tips'\n             value='independent-artists'\n             checked={this.state.selectedLibrary === 'independent-artists'}\n             className='form-check-input'\n             onChange={this.handleRadio}\n           /> Independent Artists\n         </label>\n         <br/>\n\n         {/* conditionally render these radios if we are searching through the BI catalog */}\n         {this.state.selectedLibrary === 'background-instrumentals' ?\n           <div>\n             <label>\n               <input\n                 type='radio'\n                 name='releases-or-batches'\n                 value='Background Instrumental Batch'\n                 checked={this.state.batchOrRelease === 'Background Instrumental Batch'}\n                 className='form-check-input'\n                 onChange={this.handleRadio}\n               /> Batches\n             </label>\n             <label>\n               <input\n                 type='radio'\n                 name='releases-or-batches'\n                 value='Background Instrumental Release'\n                 checked={this.state.batchOrRelease === 'Background Instrumental Release'}\n                 className='form-check-input'\n                 onChange={this.handleRadio}\n               /> Releases\n             </label>\n           </div>\n         : null\n         }\n         {/********************** end of conditionally rendering radios **********************/}\n         <br/>\n         <input type=\"checkbox\" id=\"inclusive\" onChange={this.handleCheck} checked={this.state.inclusive}/> Inclusive?\n         <br/>\n         (checking this will include all releases before the one that's selected)\n       </div>\n       <div className='dashboard-right-column'>\n         <h2>Download Links:</h2>\n         <a onClick={(() => exportTools.renameExport(this.props, this.state))} className='select'>{`Rename Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n         <br/>\n         <a onClick={(() => exportTools.soundMinerExport(this.props, this.state))} className='select'>{`SoundMiner Batch Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n         <br/>\n         <a onClick={(()=> exportTools.nbcSoundMinerExport(this.props, this.state))} className='select'>{`NBCU SoundMiner Batch Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n         <br/>\n         <a onClick={(()=> exportTools.proTunesExport(this.props, this.state))} className='select'>{`ProTunes Batch Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n         <br/>\n         <a onClick={(()=> exportTools.alterKExport(this.props, this.state))} className='select'>{`Alter K Release Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n         <br/>\n         <a onClick={(()=> exportTools.sourceAudioExport(this.props, this.state))} className='select'>{`SourceAudio Batch Export ${this.state.releaseFilter && this.state.releaseFilter.label ? this.state.releaseFilter.label : ''} ${this.state.inclusive ? 'INC' : ''}`}</a>\n       </div>\n     </div>\n    )}\n    return(\n    <div className='dashboard'>\n     { this.props.selectedComposers.length === 0 &&\n       selectedLibrary.length === 0\n         ? <Loader/> : <ExportsOptions/>}\n    </div>\n  )}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    artists: state.artists,\n    BImasterIDs: state.BImasterIDs,\n    categories: state.categories,\n    composersBI: state.composersBI,\n    cues: state.cues,\n    instrumentsBI: state.instrumentsBI,\n    keywordsBI: state.keywordsBI,\n    batchesBI: state.batchesBI,\n    releasesIA: state.releasesIA,\n    selectedComposers: state.selectedComposers,\n    selectedLibrary: state.selectedLibrary,\n    selectedReleases: state.selectedReleases,\n    styles: state.styles,\n    tempos: state.tempos,\n    tracks: state.tracks,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeSelectedLibrary,\n  initializeSelectedComposer,\n  initializeSelectedReleases\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportDashboard);\n","var map = {\n\t\"./af\": 250,\n\t\"./af.js\": 250,\n\t\"./ar\": 251,\n\t\"./ar-dz\": 252,\n\t\"./ar-dz.js\": 252,\n\t\"./ar-kw\": 253,\n\t\"./ar-kw.js\": 253,\n\t\"./ar-ly\": 254,\n\t\"./ar-ly.js\": 254,\n\t\"./ar-ma\": 255,\n\t\"./ar-ma.js\": 255,\n\t\"./ar-sa\": 256,\n\t\"./ar-sa.js\": 256,\n\t\"./ar-tn\": 257,\n\t\"./ar-tn.js\": 257,\n\t\"./ar.js\": 251,\n\t\"./az\": 258,\n\t\"./az.js\": 258,\n\t\"./be\": 259,\n\t\"./be.js\": 259,\n\t\"./bg\": 260,\n\t\"./bg.js\": 260,\n\t\"./bm\": 261,\n\t\"./bm.js\": 261,\n\t\"./bn\": 262,\n\t\"./bn.js\": 262,\n\t\"./bo\": 263,\n\t\"./bo.js\": 263,\n\t\"./br\": 264,\n\t\"./br.js\": 264,\n\t\"./bs\": 265,\n\t\"./bs.js\": 265,\n\t\"./ca\": 266,\n\t\"./ca.js\": 266,\n\t\"./cs\": 267,\n\t\"./cs.js\": 267,\n\t\"./cv\": 268,\n\t\"./cv.js\": 268,\n\t\"./cy\": 269,\n\t\"./cy.js\": 269,\n\t\"./da\": 270,\n\t\"./da.js\": 270,\n\t\"./de\": 271,\n\t\"./de-at\": 272,\n\t\"./de-at.js\": 272,\n\t\"./de-ch\": 273,\n\t\"./de-ch.js\": 273,\n\t\"./de.js\": 271,\n\t\"./dv\": 274,\n\t\"./dv.js\": 274,\n\t\"./el\": 275,\n\t\"./el.js\": 275,\n\t\"./en-au\": 276,\n\t\"./en-au.js\": 276,\n\t\"./en-ca\": 277,\n\t\"./en-ca.js\": 277,\n\t\"./en-gb\": 278,\n\t\"./en-gb.js\": 278,\n\t\"./en-ie\": 279,\n\t\"./en-ie.js\": 279,\n\t\"./en-il\": 280,\n\t\"./en-il.js\": 280,\n\t\"./en-nz\": 281,\n\t\"./en-nz.js\": 281,\n\t\"./eo\": 282,\n\t\"./eo.js\": 282,\n\t\"./es\": 283,\n\t\"./es-do\": 284,\n\t\"./es-do.js\": 284,\n\t\"./es-us\": 285,\n\t\"./es-us.js\": 285,\n\t\"./es.js\": 283,\n\t\"./et\": 286,\n\t\"./et.js\": 286,\n\t\"./eu\": 287,\n\t\"./eu.js\": 287,\n\t\"./fa\": 288,\n\t\"./fa.js\": 288,\n\t\"./fi\": 289,\n\t\"./fi.js\": 289,\n\t\"./fo\": 290,\n\t\"./fo.js\": 290,\n\t\"./fr\": 291,\n\t\"./fr-ca\": 292,\n\t\"./fr-ca.js\": 292,\n\t\"./fr-ch\": 293,\n\t\"./fr-ch.js\": 293,\n\t\"./fr.js\": 291,\n\t\"./fy\": 294,\n\t\"./fy.js\": 294,\n\t\"./gd\": 295,\n\t\"./gd.js\": 295,\n\t\"./gl\": 296,\n\t\"./gl.js\": 296,\n\t\"./gom-latn\": 297,\n\t\"./gom-latn.js\": 297,\n\t\"./gu\": 298,\n\t\"./gu.js\": 298,\n\t\"./he\": 299,\n\t\"./he.js\": 299,\n\t\"./hi\": 300,\n\t\"./hi.js\": 300,\n\t\"./hr\": 301,\n\t\"./hr.js\": 301,\n\t\"./hu\": 302,\n\t\"./hu.js\": 302,\n\t\"./hy-am\": 303,\n\t\"./hy-am.js\": 303,\n\t\"./id\": 304,\n\t\"./id.js\": 304,\n\t\"./is\": 305,\n\t\"./is.js\": 305,\n\t\"./it\": 306,\n\t\"./it.js\": 306,\n\t\"./ja\": 307,\n\t\"./ja.js\": 307,\n\t\"./jv\": 308,\n\t\"./jv.js\": 308,\n\t\"./ka\": 309,\n\t\"./ka.js\": 309,\n\t\"./kk\": 310,\n\t\"./kk.js\": 310,\n\t\"./km\": 311,\n\t\"./km.js\": 311,\n\t\"./kn\": 312,\n\t\"./kn.js\": 312,\n\t\"./ko\": 313,\n\t\"./ko.js\": 313,\n\t\"./ku\": 314,\n\t\"./ku.js\": 314,\n\t\"./ky\": 315,\n\t\"./ky.js\": 315,\n\t\"./lb\": 316,\n\t\"./lb.js\": 316,\n\t\"./lo\": 317,\n\t\"./lo.js\": 317,\n\t\"./lt\": 318,\n\t\"./lt.js\": 318,\n\t\"./lv\": 319,\n\t\"./lv.js\": 319,\n\t\"./me\": 320,\n\t\"./me.js\": 320,\n\t\"./mi\": 321,\n\t\"./mi.js\": 321,\n\t\"./mk\": 322,\n\t\"./mk.js\": 322,\n\t\"./ml\": 323,\n\t\"./ml.js\": 323,\n\t\"./mn\": 324,\n\t\"./mn.js\": 324,\n\t\"./mr\": 325,\n\t\"./mr.js\": 325,\n\t\"./ms\": 326,\n\t\"./ms-my\": 327,\n\t\"./ms-my.js\": 327,\n\t\"./ms.js\": 326,\n\t\"./mt\": 328,\n\t\"./mt.js\": 328,\n\t\"./my\": 329,\n\t\"./my.js\": 329,\n\t\"./nb\": 330,\n\t\"./nb.js\": 330,\n\t\"./ne\": 331,\n\t\"./ne.js\": 331,\n\t\"./nl\": 332,\n\t\"./nl-be\": 333,\n\t\"./nl-be.js\": 333,\n\t\"./nl.js\": 332,\n\t\"./nn\": 334,\n\t\"./nn.js\": 334,\n\t\"./pa-in\": 335,\n\t\"./pa-in.js\": 335,\n\t\"./pl\": 336,\n\t\"./pl.js\": 336,\n\t\"./pt\": 337,\n\t\"./pt-br\": 338,\n\t\"./pt-br.js\": 338,\n\t\"./pt.js\": 337,\n\t\"./ro\": 339,\n\t\"./ro.js\": 339,\n\t\"./ru\": 340,\n\t\"./ru.js\": 340,\n\t\"./sd\": 341,\n\t\"./sd.js\": 341,\n\t\"./se\": 342,\n\t\"./se.js\": 342,\n\t\"./si\": 343,\n\t\"./si.js\": 343,\n\t\"./sk\": 344,\n\t\"./sk.js\": 344,\n\t\"./sl\": 345,\n\t\"./sl.js\": 345,\n\t\"./sq\": 346,\n\t\"./sq.js\": 346,\n\t\"./sr\": 347,\n\t\"./sr-cyrl\": 348,\n\t\"./sr-cyrl.js\": 348,\n\t\"./sr.js\": 347,\n\t\"./ss\": 349,\n\t\"./ss.js\": 349,\n\t\"./sv\": 350,\n\t\"./sv.js\": 350,\n\t\"./sw\": 351,\n\t\"./sw.js\": 351,\n\t\"./ta\": 352,\n\t\"./ta.js\": 352,\n\t\"./te\": 353,\n\t\"./te.js\": 353,\n\t\"./tet\": 354,\n\t\"./tet.js\": 354,\n\t\"./tg\": 355,\n\t\"./tg.js\": 355,\n\t\"./th\": 356,\n\t\"./th.js\": 356,\n\t\"./tl-ph\": 357,\n\t\"./tl-ph.js\": 357,\n\t\"./tlh\": 358,\n\t\"./tlh.js\": 358,\n\t\"./tr\": 359,\n\t\"./tr.js\": 359,\n\t\"./tzl\": 360,\n\t\"./tzl.js\": 360,\n\t\"./tzm\": 361,\n\t\"./tzm-latn\": 362,\n\t\"./tzm-latn.js\": 362,\n\t\"./tzm.js\": 361,\n\t\"./ug-cn\": 363,\n\t\"./ug-cn.js\": 363,\n\t\"./uk\": 364,\n\t\"./uk.js\": 364,\n\t\"./ur\": 365,\n\t\"./ur.js\": 365,\n\t\"./uz\": 366,\n\t\"./uz-latn\": 367,\n\t\"./uz-latn.js\": 367,\n\t\"./uz.js\": 366,\n\t\"./vi\": 368,\n\t\"./vi.js\": 368,\n\t\"./x-pseudo\": 369,\n\t\"./x-pseudo.js\": 369,\n\t\"./yo\": 370,\n\t\"./yo.js\": 370,\n\t\"./zh-cn\": 371,\n\t\"./zh-cn.js\": 371,\n\t\"./zh-hk\": 372,\n\t\"./zh-hk.js\": 372,\n\t\"./zh-tw\": 373,\n\t\"./zh-tw.js\": 373\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 249;","\n// ==============================================================================================================\n//  SELECTED RELEASES ACTIONS\n// ==============================================================================================================\n\nexport const initializeSelectedReleases = (data) => {\n    return ({\n    type: 'INITIALIZE_SELECTED_RELEASES',\n    selectedReleases: data\n    })\n}\n","// ******************************************************************************************\nimport moment from 'moment';\n// ******************************************************************************************\n\n// ******************************************************************************************\n//  RENAME EXPORT FUNCTION\n// ******************************************************************************************\nconst renameExport = (props, state) => {\n  let headersRow = [\n     '1 DLMSONG TITLE', '2 DLM FILENAME (WAV)', '3 DLM FILENAME (MP3)', '4 NBC FILENAME (WAV)',\n     '5 NBC FILENAME (MP3)', '6 PROTUNES/GMR', '7 MUSIC DIRECTOR', '8 ZINKO', '9 DLM CATEGORY',\n     '10 DLM STYLE', '11 FOLDER', '12 RELEASE #', '13 TRACK ID#', '14 ISRC', '15 PNG MP3', '16 PNG WAV',\n     '17 CUE RATING', '18 STYLE MD', '19 PROTUNES - UNDER 6 RATED TO REMOVE', '20 GROOVERS - UNDER 8 RATED TO REMOVE',\n     '21 ACTIVE WAVs', '22 AVID MXF a1', '23 AVID MXF a2', '24 CUE_ID MXF a1', '25 CUE_ID MXF a2'\n   ];\n\n  let csvData = [];\n  csvData.push(headersRow.join('\\t'))\n    props.selectedLibrary.library.filter(cue => {\n      switch(state.batchOrRelease){\n        case 'Background Instrumental Batch':\n          return state.inclusive ? cue.rel_id <= state.releaseFilter.value && cue.cue_status !== 'Pulled' : cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled';\n          break;\n        case 'Background Instrumental Release':\n          let releasesArray = (/\\-/).test(state.releaseFilter.value) ? state.releaseFilter.value.split('-') : state.releaseFilter.value;\n          return isNaN(state.releaseFilter.value) ? cue.rel_id >= releasesArray[releasesArray.length-1] && cue.rel_id <= releasesArray[0] && cue.cue_status !== 'Pulled' : cue.cue_status !== 'Pulled'\n        case 'Indie Artist Release':\n          return state.inclusive ? cue.rel_id <= state.releaseFilter.value && cue.cue_status !== 'Pulled' : cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled';\n          break;\n      }\n   }).forEach(row => {\n     let newRow = [\n       // 1 DLMSONG TITLE\n       row.cue_title,\n       // 2 DLM FILENAME (WAV)\n       `DLM - ${row.cue_title}.wav`,\n       // 3 DLM FILENAME (MP3)\n       `DLM - ${row.cue_title}.mp3`,\n       // 4 NBC FILENAME (WAV)\n       `DLM_${row.cue_title}.wav`,\n       // 5 NBC FILENAME (MP3)\n       `DLM_${row.cue_title}.mp3`,\n       // 6 PROTUNES/GMR\n       `DLM_${row.cue_title.replace(/\\s/g, \"_\")}.wav`,\n       // 7 MUSIC DIRECTOR\n       `${row.cue_id}-${row.cue_title.toLowerCase().replace(/\\s/g, '')}.wav`,\n       // 8 ZINKO\n       `DLM${row.style_id.toString().padStart(3, 0)}_${row.cue_id}_${row.cue_title.toLowerCase().replace(/\\s/g, '')}.mp3`,\n       // 9 DLM CATEGORY\n       `${props.categories.filter(categories => categories.cat_id === row.cat_id).map(cat => cat.cat_name)}`,\n       // 10 DLM STYLE\n       `${props.styles.filter(styles => styles.style_id === row.style_id).map(style => style.style_name)}`,\n       // 11 FOLDER\n       `${props.categories.filter(categories => categories.cat_id === row.cat_id).map(cat => cat.cat_name)}\\\\${props.styles.filter(styles => styles.style_id === row.style_id).map(style => style.style_name)}`,\n       // 12 RELEASE #\n       row.rel_id,\n       // 13 TRACK ID#\n       row.cue_id,\n       // 14 ISRC\n       `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`,\n       // 15 PNG MP3\n       `${row.cue_id}.mp3`,\n       // 16 PNG WAV\n       `${row.cue_id}.wav`,\n       // 17 CUE RATING\n       row.cue_rating,\n       // 18 STYLE MD\n       `DLM${row.style_id.toString().padStart(3, 0)}_${row.cue_id}-${row.cue_title.toLowerCase().replace(/\\s/g, '')}.wav`,\n       // 19 PROTUNES - UNDER 6 RATED TO REMOVE\n       row.cue_rating < 6 ? `pppppppDLM - ${row.cue_title}.wav` : '',\n       // 20 GROOVERS - UNDER 8 RATED TO REMOVE\n       row.cue_rating < 8 ? `gggggggDLM - ${row.cue_title}.wav` : '',\n       // 21 ACTIVE WAVs\n       row.cue_status === 'Active' ? `aaaaaaaDLM - ${row.cue_title}.wav` : '',\n       // 22 AVID MXF a1\n       `DLM - ${row.cue_title}_a1.mfx`,\n       // 23 AVID MXF a2\n       `DLM - ${row.cue_title}_a2.mfx`,\n       // 24 CUE_ID MXF a1\n       `${row.cue_title}_a1.mfx`,\n       // 25 CUE_ID MXF a2\n       `${row.cue_title}_a2.mfx`\n     ]\n     csvData.push(`${newRow.join('\\t')}`)\n   })\n   generateDownload(csvData.join('\\n'), `DLM_${state.releaseFilter.label + \"_\"}${state.inclusive ? 'INC_' : ''}RENAME_${moment().format('YYYY.MM.DD-HH_mm_ss')}.csv`);\n}\n\n// ******************************************************************************************\n//  SOUND MINER EXPORT FUNCTION\n// ******************************************************************************************\n\nconst soundMinerExport = (props, state) => {\n  let headersRow = [\n     'Filename', 'Manufacturer', 'Library', 'CDTitle', 'TrackTitle', 'Version', 'Description', 'Category', 'SubCategory',\n     'FeaturedInstrument', 'Keywords', 'Composer', 'Artist', 'Publisher', 'Designer', 'BWDescription', 'BWOriginator',\n     'BWOriginatorRef', 'BWTime', 'BWDate', 'Tempo', 'ReleaseDate', 'TrackYear', 'ISRC'\n   ];\n\n   let csvData = [];\n   csvData.push(headersRow.join('\\t'))\n   props.selectedLibrary.library.filter(cue =>\n       state.inclusive ? cue.rel_id <= state.releaseFilter.value && cue.cue_status !== 'Pulled' : cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled'\n   ).forEach(row => {\n   // --------------------------------------------------------------------------------------------------\n   // these little functions parse data to Title Case formatting\n   // and remove empty keywords/instruments and tailing commas\n   // --------------------------------------------------------------------------------------------------\n     let descriptionString = parseData(row.cue_desc).join(', ');\n     let instrumentsString = parseData(row.cue_instrus_edit).join(', ');\n   // --------------------------------------------------------------------------------------------------\n     let composerArray = props.selectedComposers.filter(composer => composer.cue_id === row.cue_id);\n     let compString = '';\n     let splitString = '';\n     let pubString = '';\n     for(let c in composerArray){\n       pubString += `${composerArray[c].publisher_name}`;\n       pubString += c < composerArray.length - 1 ? ' / ' : ' ';\n       compString += `${composerArray[c].last}${composerArray[c].suffix ? ' ' + composerArray[c].suffix : ''}, ${composerArray[c].first} ${composerArray[c].middle || ''} (${composerArray[c].pro_name})`;\n       compString += c < composerArray.length - 1 ? ' / ' : ' ';\n       splitString += `${composerArray[c].composer_split}`\n       splitString += c < composerArray.length - 1 ? '/' : '%';\n     }\n     let wavRow = [\n       // Filename\n       `DLM - ${row.cue_title}.wav`,\n       // Manufacturer\n       `DL Music`,\n       // Library\n       `${compString}${splitString}`,\n       // CDTitle\n       row.cat_id !==19 && row.style_id !== 147 ? `${props.categories.filter(cat => cat.cat_id === row.cat_id).map(cat => cat.cat_name)}, ${props.styles.filter(style => style.style_id === row.style_id).map(style => style.style_name)}` : '',\n       // TrackTitle\n       row.cue_title,\n       // Version\n       (/\\sv[0-9]{1,2}/).test(row.cue_title) ?\n       row.cue_title.split(/\\sv[0-9]{1,2}/)[1].replace(/\\s?[()]/g, '') : \"\",\n       // Description\n       pubString,\n       // Category\n       `${props.categories.filter(cat => cat.cat_id === row.cat_id).map(cat => cat.cat_name)}`,\n       // SubCategory\n       `${props.styles.filter(style => style.style_id === row.style_id).map(style => style.style_name)}`,\n       // FeaturedInstrument\n       instrumentsString || '',\n       // Keywords\n       descriptionString,\n       // Composer\n       `${compString}${splitString}`,\n       // Artist\n       `${compString}${splitString}`,\n       // Publisher\n       pubString,\n       // DESIGNER\n       pubString,\n       // BWDescription\n       pubString,\n       // BWOriginator\n       'DL-Music.com',\n       // BWOriginator Reference\n       `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`,\n       // BWTime\n       row.cue_reldate_h.includes('T') ? row.cue_reldate_h.split('T')[1].split('.')[0] : row.cue_reldate_h.split(' ')[1].split('.')[0],\n       // BWDate\n       row.cue_reldate_h.split('T')[0],\n       // Tempo\n       props.tempos.filter(tempo => tempo.tempo_id === row.tempo_id)[0].tempo_name,\n       // ReleaseDate\n       row.cue_reldate_h.split('T')[0],\n       // TrackYear\n       row.cue_reldate_h.substring(0, 4),\n       // ISRC\n       `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`\n     ]\n     csvData.push(`${wavRow.join('\\t')}`)\n     wavRow.shift();\n     csvData.push([`DLM - ${row.cue_title}.aif`, ...wavRow].join('\\t'))\n     csvData.push([`DLM - ${row.cue_title}.mp3`, ...wavRow].join('\\t'))\n   })\n   generateDownload(csvData.join('\\n'), `DLM_${state.releaseFilter.label + \"_\"}SOUNDMINER_EXPORT_${moment().format('YYYY.MM.DD-HH_mm_ss')}.txt`);\n}\n\n// ******************************************************************************************\n//  NBCU SOUNDMINER RELEASE EXPORT FUNCTION\n// ******************************************************************************************\n\nconst nbcSoundMinerExport = (props, state) => {\n  let headersRow = [\n     'Filename', 'Manufacturer', 'Library', 'CDTitle', 'TrackTitle', 'Version', 'Description', 'Category', 'SubCategory',\n     'FeaturedInstrument', 'Keywords', 'Composer', 'Publisher', 'Designer', 'BWDescription', 'BWOriginator',\n     'BWOriginatorRef', 'BWTime', 'BWDate', 'Tempo', 'ReleaseDate', 'TrackYear', 'ISRC'\n ];\n\n let csvData = [];\n csvData.push(headersRow.join('\\t'))\n   props.selectedLibrary.library.filter(cue =>\n       state.inclusive ? cue.rel_id <= state.releaseFilter.value && cue.cue_status !== 'Pulled' : cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled'\n   ).forEach(row => {\n   // --------------------------------------------------------------------------------------------------\n   // these little functions parse data to Title Case formatting\n   // and remove empty keywords/instruments and tailing commas\n   // --------------------------------------------------------------------------------------------------\n     let descriptionString = parseData(row.cue_desc).join(', ');\n     let instrumentsString = parseData(row.cue_instrus_edit).join(', ');\n   // --------------------------------------------------------------------------------------------------\n     let composerArray = props.selectedComposers.filter(composer => composer.cue_id === row.cue_id);\n     let compString = '';\n     let splitString = '';\n     let pubString = '';\n     for(let c in composerArray){\n       pubString += `${composerArray[c].publisher_name}`;\n       pubString += c < composerArray.length - 1 ? ' / ' : ' ';\n       compString += `${composerArray[c].last}${composerArray[c].suffix || ''}, ${composerArray[c].first} ${composerArray[c].middle || ''} (${composerArray[c].pro_name})`;\n       compString += c < composerArray.length - 1 ? ' / ' : ' ';\n       splitString += `${composerArray[c].composer_split}`\n       splitString += c < composerArray.length - 1 ? '/' : '%';\n     }\n\n     let wavRow = [\n       // Filename\n       `DLM - ${row.cue_title}.wav`,\n       // Manufacturer\n       `DL Music`,\n       // Library\n       `${compString}${splitString}`,\n       // CDTitle\n       row.cat_id !==19 && row.style_id !== 147 ? `${props.categories.filter(cat => cat.cat_id === row.cat_id).map(cat => cat.cat_name)}, ${props.styles.filter(style => style.style_id === row.style_id).map(style => style.style_name)}` : '',\n       // TrackTitle\n       row.cue_title,\n       // Version\n       (/\\sv[0-9]{1,2}/).test(row.cue_title) ?\n       row.cue_title.split(/\\sv[0-9]{1,2}/)[1].replace(/\\s?[()]/g, '') : \"\",\n       // Description\n       pubString,\n       // Category\n       `${props.categories.filter(cat => cat.cat_id === row.cat_id).map(cat => cat.cat_name)}`,\n       // SubCategory\n       `${props.styles.filter(style => style.style_id === row.style_id).map(style => style.style_name)}`,\n       // FeaturedInstrument\n       instrumentsString || '',\n       // Keywords\n       descriptionString,\n       // Composer\n       `${compString}${splitString}`,\n       // Publisher\n       pubString,\n       // DESIGNER\n       pubString,\n       // BWDescription\n       pubString,\n       // BWOriginator\n       'DL-Music.com',\n       // BWOriginator Reference\n       `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`,\n       // BWTime\n       row.cue_reldate_h.includes('T') ? row.cue_reldate_h.split('T')[1].split('.')[0] : row.cue_reldate_h.split(' ')[1].split('.')[0],\n       // BWDate\n       row.cue_reldate_h.split('T')[0],\n       // Tempo\n       props.tempos.filter(tempo => tempo.tempo_id === row.tempo_id)[0].tempo_name,\n       // ReleaseDate\n       row.cue_reldate_h.split('T')[0],\n       // TrackYear\n       row.cue_reldate_h.substring(0, 4),\n       // ISRC\n       `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`\n     ]\n     csvData.push(`${wavRow.join('\\t')}`)\n     wavRow.shift();\n     csvData.push([`DLM - ${row.cue_title}.mp3`, ...wavRow].join('\\t'))\n   })\n   generateDownload(csvData.join('\\n'), `DLM_${(state.releaseFilter.label || '') + \"_\"}NBCU_SOUNDMINER_EXPORT_${moment().format('YYYY.MM.DD-HH_mm_ss')}.txt`);\n}\n\n// ******************************************************************************************\n//  PROTUNES BATCH EXPORT FUNCTION\n// ******************************************************************************************\n// exports a batch of tracks with ratings only above 5, and splits them into 2 tiers:\n// tier 2 = rating 8 - 10\n// tier 1 = rating 6 - 7\n// ******************************************************************************************\n\n\nconst proTunesExport = (props, state) => {\n  let headersRow = [\n     'provider filename', 'provider track id', 'title', 'version', 'primary track', 'catalog', 'instrumental',\n     'vocals', 'genre', 'keywords', 'mood', 'description', 'era', 'sounds-like/influences', 'instruments',\n     'bpm', 'lyrics', 'restrictions', 'original/cover', 'one-stop licensing', 'cd title / ref #',\n     'release date', 'track no', 'iswc', 'isrc', 'tier', 'ARTIST',\n     'COMPOSER 1 NAME', 'COMPOSER 1 PRO', 'COMPOSER 1 PRO NUMBER', 'COMPOSER 1 SPLIT',\n     'COMPOSER 2 NAME', 'COMPOSER 2 PRO', 'COMPOSER 2 PRO NUMBER', 'COMPOSER 2 SPLIT',\n     'COMPOSER 3 NAME', 'COMPOSER 3 PRO', 'COMPOSER 3 PRO NUMBER', 'COMPOSER 3 SPLIT',\n     'COMPOSER 4 NAME', 'COMPOSER 4 PRO', 'COMPOSER 4 PRO NUMBER', 'COMPOSER 4 SPLIT',\n     'COMPOSER 5 NAME', 'COMPOSER 5 PRO', 'COMPOSER 5 PRO NUMBER', 'COMPOSER 5 SPLIT',\n     'COMPOSER 6 NAME', 'COMPOSER 6 PRO', 'COMPOSER 6 PRO NUMBER', 'COMPOSER 6 SPLIT',\n     'PUBLISHER 1 NAME', 'PUBLISHER 1 PRO', 'PUBLISHER 1 PRO NUMBER', 'PUBLISHER 1 SPLIT',\n     'PUBLISHER 2 NAME', 'PUBLISHER 2 PRO', 'PUBLISHER 2 PRO NUMBER', 'PUBLISHER 2 SPLIT',\n     'PUBLISHER 3 NAME', 'PUBLISHER 3 PRO', 'PUBLISHER 3 PRO NUMBER', 'PUBLISHER 3 SPLIT',\n     'PUBLISHER 4 NAME', 'PUBLISHER 4 PRO', 'PUBLISHER 4 PRO NUMBER', 'PUBLISHER 4 SPLIT',\n     'PUBLISHER 5 NAME', 'PUBLISHER 5 PRO', 'PUBLISHER 5 PRO NUMBER', 'PUBLISHER 5 SPLIT',\n     'PUBLISHER 6 NAME', 'PUBLISHER 6 PRO', 'PUBLISHER 6 PRO NUMBER', 'PUBLISHER 6 SPLIT'\n ];\n\n let csvData = [];\n csvData.push(headersRow.join('\\t'));\n   props.selectedLibrary.library.filter(cue =>\n      cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled' && cue.cue_rating > 5\n   ).forEach(row => {\n  // --------------------------------------------------------------------------------------------------\n  // these little functions parse data to Title Case formatting\n  // and remove empty keywords/instruments and tailing commas\n  // --------------------------------------------------------------------------------------------------\n    let descriptionString = parseData(row.cue_desc).join(', ');\n    let instrumentsString = parseData(row.cue_instrus_edit).join(', ');\n  // --------------------------------------------------------------------------------------------------\n\n    let composerArray = props.selectedComposers.filter(composer => composer.cue_id === row.cue_id);\n    let releaseParse = state.releaseFilter.label.split('R')[1];\n\n    let wavRow = [\n      // provider filename\n      `DLM_${row.cue_title.replace(/\\s/g, '_')}.wav`,\n      // provider track id\n      row.cue_id,\n      // title\n      row.cue_title,\n      // version\n      '',\n      // primary track\n      props.BImasterIDs.filter(ids => row.cue_id === ids.cue_id).map(id => id.master_cue_id)[0],\n      // catalog\n      'DL Music',\n      // instrumental\n      'Yes',\n      // vocals\n      '',\n      // genre\n      `${props.categories.filter(categories =>\n       categories.cat_id === row.cat_id).map(cat =>\n         cat.cat_name)}, ${props.styles.filter(styles =>\n           styles.style_id === row.style_id).map(style =>\n             style.style_name)}`,\n      // keywords\n      descriptionString,\n      // mood\n      descriptionString,\n      // description\n      '',\n      // era\n      '',\n      // sounds-like/influences\n      row.sounds_like_band_edit || '',\n      // instruments\n      instrumentsString || '',\n      // bpm\n      '',\n      // lyrics\n      '',\n      // restrictions\n      '',\n      // original/cover\n      'Original',\n      // one-stop licensing\n      'Yes',\n      // cd title / ref #\n      `${props.categories.filter(categories =>\n         categories.cat_id === row.cat_id).map(cat =>\n           cat.cat_name)}, ${props.styles.filter(styles =>\n             styles.style_id === row.style_id).map(style =>\n               style.style_name)} Vol. ${(/\\_/).test(releaseParse) ?\n                 releaseParse.split('_')[0] :\n                 releaseParse}`,\n      // release date\n      row.cue_reldate_h.substring(0, 4),\n      // track no\n      row.cue_id,\n      // iswc\n      '',\n      // isrc\n      `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`,\n      // tier // tier 2 = rating 8 - 10  // tier 1 = rating 6 - 7\n      row.cue_rating > 7 ? 2 : 1 ,\n      // ARTIST\n      '',\n      // 'COMPOSER 1 NAME'\n      `${composerArray[0].first + ' '}${composerArray[0].middle ? composerArray[0].middle + ' ' : ''}${composerArray[0].last }${composerArray[0].suffix ? ' ' + composerArray[0].suffix : ''}`,\n      // 'COMPOSER 1 PRO'\n      composerArray[0].pro_name,\n      // 'COMPOSER 1 PRO NUMBER'\n      composerArray[0].cae,\n      // 'COMPOSER 1 SPLIT'\n      composerArray[0].composer_split,\n      // 'COMPOSER 2 NAME'\n      composerArray[1] ? `${composerArray[1].first + ' '}${composerArray[1].middle ? composerArray[1].middle + ' ' : ''}${composerArray[1].last }${composerArray[1].suffix ? ' ' + composerArray[1].suffix : ''}` : '',\n      // 'COMPOSER 2 PRO'\n      composerArray[1] ? composerArray[1].pro_name : '',\n      // 'COMPOSER 2 PRO NUMBER'\n      composerArray[1] ? composerArray[1].cae : '',\n      // 'COMPOSER 2 SPLIT'\n      composerArray[1] ? composerArray[1].composer_split : '',\n      // 'COMPOSER 3 NAME'\n      composerArray[2] ? `${composerArray[2].first + ' '}${composerArray[2].middle ? composerArray[2].middle + ' ' : ''}${composerArray[2].last }${composerArray[2].suffix ? ' ' + composerArray[2].suffix : ''}` : '',\n      // 'COMPOSER 3 PRO'\n      composerArray[2] ? composerArray[2].pro_name : '',\n      // 'COMPOSER 3 PRO NUMBER'\n      composerArray[2] ? composerArray[2].cae : '',\n      // 'COMPOSER 3 SPLIT'\n      composerArray[2] ? composerArray[2].composer_split : '',\n      // 'COMPOSER 4 NAME'\n      composerArray[3] ? `${composerArray[3].first + ' '}${composerArray[3].middle ? composerArray[3].middle + ' ' : ''}${composerArray[3].last }${composerArray[3].suffix ? ' ' + composerArray[3].suffix : ''}` : '',\n      // 'COMPOSER 4 PRO'\n      composerArray[3] ? composerArray[3].pro_name : '',\n      // 'COMPOSER 4 PRO NUMBER'\n      composerArray[3] ? composerArray[3].cae : '',\n      // 'COMPOSER 4 SPLIT'\n      composerArray[3] ? composerArray[3].composer_split : '',\n      // 'COMPOSER 5 NAME'\n      composerArray[4] ? `${composerArray[4].first + ' '}${composerArray[4].middle ? composerArray[4].middle + ' ' : ''}${composerArray[4].last }${composerArray[4].suffix ? ' ' + composerArray[4].suffix : ''}` : '',\n      // 'COMPOSER 5 PRO'\n      composerArray[4] ? composerArray[4].pro_name : '',\n      // 'COMPOSER 5 PRO NUMBER'\n      composerArray[4] ? composerArray[4].cae : '',\n      // 'COMPOSER 5 SPLIT'\n      composerArray[4] ? composerArray[4].composer_split : '',\n      // 'COMPOSER 6 NAME'\n      composerArray[5] ? `${composerArray[5].first + ' '}${composerArray[5].middle ? composerArray[5].middle + ' ' : ''}${composerArray[5].last }${composerArray[5].suffix ? ' ' + composerArray[5].suffix : ''}` : '',\n      // 'COMPOSER 6 PRO'\n      composerArray[5] ? composerArray[5].pro_name : '',\n      // 'COMPOSER 6 PRO NUMBER'\n      composerArray[5] ? composerArray[5].cae : '',\n      // 'COMPOSER 6 SPLIT'\n      composerArray[5] ? composerArray[5].composer_split : '',\n      // 'PUBLISHER 1 NAME'\n      composerArray[0].name_only,\n      // 'PUBLISHER 1 PRO'\n      composerArray[0].publisher_pro,\n      // 'PUBLISHER 1 PRO NUMBER'\n      composerArray[0].ipi,\n      // 'PUBLISHER 1 SPLIT'\n      composerArray[0].composer_split,\n      // 'PUBLISHER 2 NAME'\n      composerArray[1] ? composerArray[1].name_only : '',\n      // 'PUBLISHER 2 PRO'\n      composerArray[1] ? composerArray[1].publisher_pro : '',\n      // 'PUBLISHER 2 PRO NUMBER'\n      composerArray[1] ? composerArray[1].ipi : '',\n      // 'PUBLISHER 2 SPLIT'\n      composerArray[1] ? composerArray[1].composer_split : '',\n      // 'PUBLISHER 3 NAME'\n      composerArray[2] ? composerArray[2].name_only : '',\n      // 'PUBLISHER 3 PRO'\n      composerArray[2] ? composerArray[2].publisher_pro : '',\n      // 'PUBLISHER 3 PRO NUMBER'\n      composerArray[2] ? composerArray[2].ipi : '',\n      // 'PUBLISHER 3 SPLIT'\n      composerArray[2] ? composerArray[2].composer_split : '',\n      // 'PUBLISHER 4 NAME'\n      composerArray[3] ? composerArray[3].name_only : '',\n      // 'PUBLISHER 4 PRO'\n      composerArray[3] ? composerArray[3].publisher_pro : '',\n      // 'PUBLISHER 4 PRO NUMBER'\n      composerArray[3] ? composerArray[3].ipi : '',\n      // 'PUBLISHER 4 SPLIT'\n      composerArray[3] ? composerArray[3].composer_split : '',\n      // 'PUBLISHER 5 NAME'\n      composerArray[4] ? composerArray[4].name_only : '',\n      // 'PUBLISHER 5 PRO'\n      composerArray[4] ? composerArray[4].publisher_pro : '',\n      // 'PUBLISHER 5 PRO NUMBER'\n      composerArray[4] ? composerArray[4].ipi : '',\n      // 'PUBLISHER 5 SPLIT'\n      composerArray[4] ? composerArray[4].composer_split : '',\n      // 'PUBLISHER 6 NAME'\n      composerArray[5] ? composerArray[5].name_only : '',\n      // 'PUBLISHER 6 PRO'\n      composerArray[5] ? composerArray[5].publisher_pro : '',\n      // 'PUBLISHER 6 PRO NUMBER'\n      composerArray[5] ? composerArray[5].ipi : '',\n      // 'PUBLISHER 6 SPLIT'\n      composerArray[5] ? composerArray[5].composer_split : ''\n     ]\n     csvData.push(`${wavRow.join('\\t')}`)\n   })\n   generateDownload(csvData.join('\\n'), `DLM_${state.releaseFilter.label + \"_\"}PROTUNES_TIERED_EXPORT_${moment().format('YYYY.MM.DD-HH_mm_ss')}.txt`);\n}\n\n// ******************************************************************************************\n//  ALTER K RELEASES EXPORT FUNCTION\n// ------------------------------------------------------------------------------------------\n//  done & perfect\n// ******************************************************************************************\n\nconst alterKExport = (props, state) => {\n  let headersRow = [\n     'Category', 'CD #', 'Composer', 'Description', 'Duration', 'Instrumentation', 'PRO',\n     'Publisher', 'Release', 'Composer Split', 'Publisher Split', 'Style', 'Tempo', 'Song Title',\n     'Track #', 'Track ID', 'Cue Rating', 'ISRC', 'Sounds Like Band', 'Sounds Like Film'\n   ];\n\n  let csvData = [];\n  csvData.push(headersRow.join('\\t'));\n  props.selectedLibrary.library.filter(cue =>\n    cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled'\n  ).forEach(row => {\n\n    // --------------------------------------------------------------------------------------------------\n    // these little functions parse data to Title Case formatting\n    // and remove empty keywords/instruments and tailing commas\n    // --------------------------------------------------------------------------------------------------\n    let descriptionString = parseData(row.cue_desc).join(', ');\n    let instrumentsString = parseData(row.cue_instrus_edit).join(', ');\n\n    // --------------------------------------------------------------------------------------------------\n    // creates composer/publisher/splits data\n    // --------------------------------------------------------------------------------------------------\n\n    let compString = '';\n    let proString = '';\n    let pubString = '';\n    let splitString = '';\n    let pubSplit = '';\n    let composerArray = props.selectedComposers.filter(composer => composer.cue_id === row.cue_id);\n\n    for(let c in composerArray){\n      compString += `${composerArray[c].first}${composerArray[c].middle ? ' ' + composerArray[c].middle  : ''} ${composerArray[c].last}${composerArray[c].suffix ? ' ' + composerArray[c].suffix : ''}`;\n      compString += c < composerArray.length - 1 ? ' / ' : '';\n\n      proString += (c > 0) && (proString !== composerArray[c].pro_name) ? ' / ' : '';\n      proString += composerArray[c].pro_name !== proString ? composerArray[c].pro_name : '';\n\n      pubString += (c > 0) && (pubString !== composerArray[c].publisher_name) ? ' / ' : '';\n      pubString += (composerArray[c].pro_name ===  'ASCAP' || 'BMI' || 'SESAC') && (pubString.split('/')[0].trim() !== composerArray[c].publisher_name) ? `${composerArray[c].publisher_name}` : '';\n\n      splitString += `${composerArray[c].composer_split !== 100 ? composerArray[c].composer_split.toFixed(2) : composerArray[c].composer_split}`\n      splitString += c < composerArray.length - 1 ? ' / ' : '';\n\n      pubSplit = pubString.includes('/') ? `50.00 / 50.00` : '100'\n    }\n\n    // --------------------------------------------------------------------------------------------------\n\n    let wavRow = [\n      // 'Category'\n      `${props.categories.filter(categories => categories.cat_id === row.cat_id).map(cat => cat.cat_name)}`,\n      // 'CD #'\n      `DLM${row.style_id.toString().padStart(3, 0)}`,\n      // 'Composer'\n      compString,\n      // 'Description'\n      descriptionString,\n      // 'Duration'\n      row.cue_duration,\n      // 'Instrumentation'\n      instrumentsString,\n      // 'PRO'\n      proString,\n      // 'Publisher'\n      pubString,\n      // 'Release'\n      state.releaseFilter.label,\n      // 'Composer Split'\n      splitString,\n      // 'Publisher Split'\n      pubSplit,\n      // 'Style'\n      `${props.styles.filter(styles => styles.style_id === row.style_id).map(style => style.style_name)}`,\n      // 'Tempo'\n      props.tempos.filter(tempo => tempo.tempo_id === row.tempo_id)[0].tempo_name,\n      // 'Song Title'\n      row.cue_title,\n      // 'Track #'\n      row.cue_id,\n      // 'Track ID'\n      row.cue_id,\n      // 'Cue Rating'\n      'N/A',   // row.cue_rating,\n      // ISRC\n      `US-RRD-${row.cue_reldate_h.substring(2, 4)}-${row.cue_id.toString().slice(1)}`,\n      // 'Sounds Like Band'\n      row.sounds_like_band_edit || 'N/A',\n      // 'Sounds Like Film'\n      row.sounds_like_film_edit || 'N/A'\n     ]\n     csvData.push(`${wavRow.join('\\t')}`)\n   })\n   generateDownload(csvData.join('\\n'), `DLM_${state.releaseFilter.label + \"_\"}ALTER_K_EXPORT_${moment().format('YYYY.MM.DD-HH_mm_ss')}.txt`);\n}\n\n// ******************************************************************************************\n// Source Audio EXPORT FUNCTION\n// ------------------------------------------------------------------------------------------\n// this is where i left off 666 ***\n// ******************************************************************************************\n\nconst sourceAudioExport = (props, state) => {\n  let headersRow = ['xx MAIN VERSION TITLE xx',\n    'Sourceaudio Id', 'Catalog', 'Label', 'Title', 'Filename', 'Master ID', 'Album', 'Album Code', 'Album Description', 'Album Genre', 'Track Number', 'Artist', 'Composer', 'Publisher', 'Genres', 'Tempos', 'Cue Types', 'Bpm', 'Release Date', 'Description', 'Mood', 'Style', 'Style Of', 'Lyrics', 'Has Vocal', 'Explicit', 'Isrc', 'Iswc', 'Publisher 1 Company', 'Publisher 1 Pro Affiliation', 'Publisher 1 CAE/IPI', 'Publisher 1 Ownership Share', 'Publisher 1 Role', 'Publisher 1 Collection Share Percentage', 'Publisher 1 Collection Share Territory', 'Writer 1 First Name', 'Writer 1 Last Name', 'Writer 1 Company', 'Writer 1 Pro Affiliation', 'Writer 1 CAE/IPI', 'Writer 1 Ownership Share', 'Writer 1 Publisher', 'Writer 1 Role', 'Publisher 2 Company', 'Publisher 2 Pro Affiliation', 'Publisher 2 CAE/IPI', 'Publisher 2 Ownership Share', 'Publisher 2 Role', 'Publisher 2 Collection Share Percentage', 'Publisher 2 Collection Share Territory', 'Writer 2 First Name', 'Writer 2 Last Name', 'Writer 2 Company', 'Writer 2 Pro Affiliation', 'Writer 2 CAE/IPI', 'Writer 2 Ownership Share', 'Writer 2 Publisher', 'Writer 2 Role', 'Publisher 3 Company', 'Publisher 3 Pro Affiliation', 'Publisher 3 CAE/IPI', 'Publisher 3 Ownership Share', 'Publisher 3 Role', 'Publisher 3 Collection Share Percentage', 'Publisher 3 Collection Share Territory', 'Writer 3 First Name', 'Writer 3 Last Name', 'Writer 3 Company', 'Writer 3 Pro Affiliation', 'Writer 3 CAE/IPI', 'Writer 3 Ownership Share', 'Writer 3 Publisher', 'Writer 3 Role', 'Publisher 4 Company', 'Publisher 4 Pro Affiliation', 'Publisher 4 CAE/IPI', 'Publisher 4 Ownership Share', 'Publisher 4 Role', 'Publisher 4 Collection Share Percentage', 'Publisher 4 Collection Share Territory', 'Writer 4 First Name', 'Writer 4 Last Name', 'Writer 4 Company', 'Writer 4 Pro Affiliation', 'Writer 4 CAE/IPI', 'Writer 4 Ownership Share', 'Writer 4 Publisher', 'Writer 4 Role', 'Publisher 5 Company', 'Publisher 5 Pro Affiliation', 'Publisher 5 CAE/IPI', 'Publisher 5 Ownership Share', 'Publisher 5 Role', 'Publisher 5 Collection Share Percentage', 'Publisher 5 Collection Share Territory', 'Writer 5 First Name', 'Writer 5 Last Name', 'Writer 5 Company', 'Writer 5 Pro Affiliation', 'Writer 5 CAE/IPI', 'Writer 5 Ownership Share', 'Writer 5 Publisher', 'Writer 5 Role', 'Instrumentation', 'Pro', 'Release'\n   ];\n   console.log('testing')\n  let csvData = [];\n  csvData.push(headersRow.join('\\t'));\n  props.selectedLibrary.library.filter(cue =>\n    cue.rel_id === state.releaseFilter.value && cue.cue_status !== 'Pulled'\n  ).forEach(row => {\n    let releaseParse = state.releaseFilter.label.split('R')[1];\n    // --------------------------------------------------------------------------------------------------\n    // these little functions parse data to Title Case formatting\n    // and remove empty keywords/instruments and tailing commas\n    // --------------------------------------------------------------------------------------------------\n    let descriptionString = parseData(row.cue_desc).join(', ');\n    let instrumentsString = parseData(row.cue_instrus_edit).join(', ');\n\n    // --------------------------------------------------------------------------------------------------\n    // creates composer/publisher/splits data\n    // --------------------------------------------------------------------------------------------------\n\n    let compString = '';\n    let proString = '';\n    let pubString = '';\n    let splitString = '';\n    let pubSplit = '';\n    let composerArray = props.selectedComposers.filter(composer => composer.cue_id === row.cue_id);\n\n    for(let c in composerArray){\n      compString += `${composerArray[c].first}${composerArray[c].middle ? ' ' + composerArray[c].middle  : ''} ${composerArray[c].last}${composerArray[c].suffix ? ' ' + composerArray[c].suffix : ''}`;\n      compString += c < composerArray.length - 1 ? ' / ' : '';\n\n      proString += (c > 0) && (proString !== composerArray[c].pro_name) ? ' / ' : '';\n      proString += composerArray[c].pro_name !== proString ? composerArray[c].pro_name : '';\n\n      pubString += (c > 0) && (pubString !== composerArray[c].publisher_name) ? ' / ' : '';\n      pubString += (composerArray[c].pro_name ===  'ASCAP' || 'BMI' || 'SESAC') && (pubString.split('/')[0].trim() !== composerArray[c].publisher_name) ? `${composerArray[c].publisher_name}` : '';\n\n      splitString += `${composerArray[c].composer_split !== 100 ? composerArray[c].composer_split.toFixed(2) : composerArray[c].composer_split}`\n      splitString += c < composerArray.length - 1 ? ' / ' : '';\n\n      pubSplit = pubString.includes('/') ? `50.00 / 50.00` : '100'\n    }\n\n    // --------------------------------------------------------------------------------------------------\n\n    let wavRow = [\n        // xx MAIN VERSION TITLE xx\n        row.cue_title,\n        // Sourceaudio Id\n        '',\n        // Catalog\n        'DL Music',\n        // Label\n        'DL Music',\n        // Title\n        row.cue_title,\n        // Filename\n        `DLM - ${row.cue_title}.mp3`,\n        // Master ID\n        'formula',\n        // Album\n        `${props.categories.filter(categories =>\n           categories.cat_id === row.cat_id).map(cat =>\n             cat.cat_name)}, ${props.styles.filter(styles =>\n               styles.style_id === row.style_id).map(style =>\n                 style.style_name)} Vol. ${(/\\_/).test(releaseParse) ?\n                   releaseParse.split('_')[0] :\n                   releaseParse}`\n        // Album Code\n\n        // Album Description\n        // Album Genre\n        // Track Number\n        // Artist\n        // Composer\n        // Publisher\n        // Genres\n        // Tempos\n        // Cue Types\n        // Bpm\n        // Release Date\n        // Description\n        // Mood\n        // Style\n        // Style Of\n        // Lyrics\n        // Has Vocal\n        // Explicit\n        // Isrc\n        // Iswc\n        // Publisher 1 Company\n        // Publisher 1 Pro Affiliation\n        // Publisher 1 CAE/IPI\n        // Publisher 1 Ownership Share\n        // Publisher 1 Role\n        // Publisher 1 Collection Share Percentage\n        // Publisher 1 Collection Share Territory\n        // Writer 1 First Name\n        // Writer 1 Last Name\n        // Writer 1 Company\n        // Writer 1 Pro Affiliation\n        // Writer 1 CAE/IPI\n        // Writer 1 Ownership Share\n        // Writer 1 Publisher\n        // Writer 1 Role\n        // Publisher 2 Company\n        // Publisher 2 Pro Affiliation\n        // Publisher 2 CAE/IPI\n        // Publisher 2 Ownership Share\n        // Publisher 2 Role\n        // Publisher 2 Collection Share Percentage\n        // Publisher 2 Collection Share Territory\n        // Writer 2 First Name\n        // Writer 2 Last Name\n        // Writer 2 Company\n        // Writer 2 Pro Affiliation\n        // Writer 2 CAE/IPI\n        // Writer 2 Ownership Share\n        // Writer 2 Publisher\n        // Writer 2 Role\n        // Publisher 3 Company\n        // Publisher 3 Pro Affiliation\n        // Publisher 3 CAE/IPI\n        // Publisher 3 Ownership Share\n        // Publisher 3 Role\n        // Publisher 3 Collection Share Percentage\n        // Publisher 3 Collection Share Territory\n        // Writer 3 First Name\n        // Writer 3 Last Name\n        // Writer 3 Company\n        // Writer 3 Pro Affiliation\n        // Writer 3 CAE/IPI\n        // Writer 3 Ownership Share\n        // Writer 3 Publisher\n        // Writer 3 Role\n        // Publisher 4 Company\n        // Publisher 4 Pro Affiliation\n        // Publisher 4 CAE/IPI\n        // Publisher 4 Ownership Share\n        // Publisher 4 Role\n        // Publisher 4 Collection Share Percentage\n        // Publisher 4 Collection Share Territory\n        // Writer 4 First Name\n        // Writer 4 Last Name\n        // Writer 4 Company\n        // Writer 4 Pro Affiliation\n        // Writer 4 CAE/IPI\n        // Writer 4 Ownership Share\n        // Writer 4 Publisher\n        // Writer 4 Role\n        // Publisher 5 Company\n        // Publisher 5 Pro Affiliation\n        // Publisher 5 CAE/IPI\n        // Publisher 5 Ownership Share\n        // Publisher 5 Role\n        // Publisher 5 Collection Share Percentage\n        // Publisher 5 Collection Share Territory\n        // Writer 5 First Name\n        // Writer 5 Last Name\n        // Writer 5 Company\n        // Writer 5 Pro Affiliation\n        // Writer 5 CAE/IPI\n        // Writer 5 Ownership Share\n        // Writer 5 Publisher\n        // Writer 5 Role\n        // Instrumentation\n        // Pro\n        // Release\n       ];\n     csvData.push(`${wavRow.join('\\t')}`)\n     console.log(767, wavRow)\n   })\n   // generateDownload(csvData.join('\\n'), `DLM_${state.releaseFilter.label + \"_\"}ALTER_K_EXPORT_${moment().format('YYYY.MM.DD-HH_mm_ss')}.txt`);\n}\n\n// ******************************************************************************************\n// parseData function\n// ------------------------------------------------------------------------------------------\n// this function capitalizes all the words in the descriptions and insturments of each cue,\n// it also removes blank spaces and trailing commas\n// ******************************************************************************************\n\nconst parseData = (array) => {\n  let parsedArray = []\n    if(array !== null){\n      array.split(', ').forEach(desc => {\n        let wordArray = []\n        desc.replace(',', '').split(' ').forEach(word => {\n           word.replace(/\\w\\S*/g, txt => {\n             wordArray.push(txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n           })\n        })\n        if(wordArray[0] !== undefined){\n         parsedArray.push(wordArray.join(' '))\n        }\n      })\n    }\n  return parsedArray;\n}\n\n// ******************************************************************************************\n// generateDownload function\n// ------------------------------------------------------------------------------------------\n// this function takes the fileName as an argument and generates a link for that export\n// ******************************************************************************************\nconst generateDownload = (csvData, fileName) => {\n  let downloadLink = document.createElement(\"a\");\n  let blob = new Blob([\"\\ufeff\", csvData]);\n  let url = URL.createObjectURL(blob);\n  downloadLink.href = url;\n  downloadLink.download = fileName;\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\n\nexport { alterKExport, nbcSoundMinerExport, proTunesExport, renameExport, soundMinerExport, sourceAudioExport };\n// ******************************************************************************************\n\n\n\n\n\n\n\n\n\n\n\n// ******************************************************************************************\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AALA;AAcA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAIA;AACA;AAAA;AACA;AA1CA;AA4CA;AACA;AAnEA;AAEA;AACA;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;;AAEA;;;;;;AACA;AACA;;AACA;;;;;;AACA;AACA;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAgBA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAcA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAKA;;;;AAhNA;AACA;AAkNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAOA;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7QA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAWA;AACA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAlBA;AAoBA;AAAA;AAAA;AAAA;AApBA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AA1BA;AAAA;AAAA;AAkCA;AAlCA;AAsCA;AAEA;AAEA;AA1CA;AAAA;AAAA;AAAA;AAoDA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AAfA;AAiBA;AAAA;AAAA;AAAA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AAEA;AAEA;AAvBA;AAAA;AA6BA;AAEA;AAEA;AAEA;AAnCA;AAuCA;AAEA;AAEA;AAAA;AAAA;AAEA;AAEA;AA/CA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AAfA;AAiBA;AAAA;AAAA;AAAA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AAEA;AAEA;AAvBA;AA2BA;AAEA;AAEA;AAEA;AAjCA;AAqCA;AAEA;AAEA;AAAA;AAAA;AAEA;AAEA;AA7CA;AAiDA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAhBA;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AA5CA;AA8CA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAEA;AAEA;AA1DA;AA8DA;AAEA;AAhEA;AAotBA;AAwBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AAnCA;AAsCA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAVA;AAcA;AAdA;AAgaA;;;;A","sourceRoot":""}